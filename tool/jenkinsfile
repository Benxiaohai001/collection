@Library('pdb-ci-libraries') _

String runningStage = "null"

setThirdpartVersion()
// use xp kylin builder
env.IMAGE_TAG = env.BRANCH_NAME + "-" + env.BUILD_ID
env.OS = "kylin-v10-sp2"
env.ARCH = "x86_64"
setBuilderImage(productName:"pieclouddb-xp",org:"tsp",repo:"gpdb",branch:"xp2-6x")

pipeline {

    agent {
        kubernetes {
            yaml loadPodYaml(name: "builder_with_minio_without_ccache.yaml")
            podRetention byLabel()
            defaultContainer 'shell'
            cloud "kubernetes"
        }
    }

    options {
        disableConcurrentBuilds abortPrevious: true
        skipDefaultCheckout()
        timeout(time: 10, unit: 'HOURS')
        timestamps()
    }

    stages {
        stage("Test"){
            steps{
                script{
                    def job  = [:]
                    def products = ['tp','gp6','gp7']
                    for( String p in products){
                        def product  = p.toString()
                        String builderImage = ""
                        if(p== 'tp'){
                            builderImage = setBuilderImage(productName:"pieclouddb-tp",org:"tsp",repo:'postgres',branch:"pdbtp_stable")
                        }else if (p == "gp6"){
                            builderImage = setBuilderImage(productName:"pieclouddb-xp",org:"tsp",repo:'gpdb',branch:"xp2-6x")
                        }else {
                            builderImage = setBuilderImage(productName:"pieclouddb-xp",org:"tsp",repo:"gpdb",branch:"xp3-7x-dev")
                        }

                        job[p] = {
                            stage(product){
                                podTemplate(cloud: env.CLOUD, name:  "nn-${env.BRANCH_NAME}-${env.BUILD_ID}-${product}-nn-regress", inheritFrom: 'pdb-test', podRetention: byLabel(),yaml:loadPodYaml(name: "builder_with_minio_without_ccache.yaml",builderImage:builderImage) ) {
                                    node(env.POD_LABEL) {
                                        container('shell') {
                                            stage('Checkout SCM') {
                                                printPodInfo(containerName: "shell")
                                                print "Checkout start"
                                                checkoutSCM(checkoutType: 'pr', changeId: env.CHANGE_ID, gitUrl: "ssh://git@ssh.git.dev.openpie.com:2222/tsp/pdbnn.git")
                                            }
                                            stage('Faiss Compile') {
                                                dir('faiss') {
                                                    def faissOptLevel = "avx2"
                                                    def libraryPath = ""
                                                    def dblaVendor = "Generic"
                                                    def accelerationType = "default"
                                                    sh """#!/bin/bash
                                                     set -ex
                                                     umask 002
                                                     cmake -DFAISS_OPT_LEVEL=${faissOptLevel} -DFAISS_ENABLE_PYTHON=OFF -DFAISS_ENABLE_GPU=0 -DBUILD_TESTING=OFF -DBUILD_SHARED_LIBS=ON -DBLA_VENDOR=${dblaVendor} ${libraryPath} -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release
                                                     make -j8 
                                                     sudo make install
                                                  """

                                                }
                                            }
                                            if( product == "tp"){
                                                runningStage = env.STAGE_NAME
                                                stage('Install pg with rpm') {
                                                    sh'''
                                                     wget http://10.24.11.241:9003/pieclouddb-tp/postgres-package/662/ced9942634/pieclouddb-tp-2.9.8-ced9942634.20240522_ky10.x86_64.rpm
                                                      sudo rpm -ivh pieclouddb-tp-2.9.8-ced9942634.20240522_ky10.x86_64.rpm
                                                  '''
                                                }
                                                stage('Compile pdbnn') {
                                                    sh(script: "./jenkins/scripts/build_with_pg.sh")
                                                }
                                                stage("e2e test pdbnn"){
                                                    runningStage = env.STAGE_NAME
                                                    catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
                                                        try {
                                                            sh "mc config host add minio http://127.0.0.1:9000 minioadmin minioadmin"
                                                            sh "mc mb minio/bucket"
                                                            sh(script: "/bin/bash -c 'jenkins/scripts/test_pdbnn.sh'")
                                                        } catch (Throwable e) {
                                                            podRetention()
                                                            error e.message
                                                        }
                                                    }
                                                }
                                                stage("pg pdbnn regress test"){
                                                    runningStage = env.STAGE_NAME
                                                    String cmd = "/opt/pdbnn/jenkins/scripts/regress_test_pg.sh"
                                                    if(!executeStage(cmd,60,true,'shell')){
                                                        sh "cat /opt/pdbnn/regression.diffs"
                                                    }
                                                }

                                            }else if (product == "gp6") {
                                                stage('Install gp with rpm') {
                                                    sh '''
                                                      wget http://10.24.11.241:9003/pieclouddb-xp/pdbxp-package/617/960e921cd0/pieclouddb-xp-2.9.15-960e921cd0.20240522_ky10.x86_64.rpm
                                                      sudo rpm -ivh pieclouddb-xp-2.9.15-960e921cd0.20240522_ky10.x86_64.rpm
                                                   '''
                                                }
                                                stage('Compile pdbnn') {
                                                    sh(script: "./jenkins/scripts/build_with_gp.sh")
                                                }
                                                stage('gp 6 regress  pdbnn test ') {
                                                    // 启动ssh 并配置免密登录
                                                    runningStage = env.STAGE_NAME
                                                    String cmd = "/opt/pdbnn/jenkins/scripts/regress_test_gp.sh ${product}"
                                                    if (!executeStage(cmd, 60, true, 'shell')) {
                                                        sh "cat /opt/pdbnn/regression.diffs"
                                                    }
                                                }

                                            }else if(product == "gp7"){
                                                stage('Install gp with rpm') {
                                                    sh '''
                                                          wget http://10.24.11.241:9003/pieclouddb-xp/pdbxp-package/691/98bbc9b83a/pieclouddb-xp-7.1.0-98bbc9b83a.20240606_ky10.x86_64.rpm
                                                          sudo rpm -ivh pieclouddb-xp-7.1.0-98bbc9b83a.20240606_ky10.x86_64.rpm
                                                       '''
                                                }
                                                stage('Compile pdbnn') {
                                                    sh(script: "./jenkins/scripts/build_with_gp.sh")
                                                }
                                                stage('gp 7 regress  pdbnn test ') {
                                                    // 启动ssh 并配置免密登录
                                                    runningStage = env.STAGE_NAME
                                                    String cmd = "/opt/pdbnn/jenkins/scripts/regress_test_gp.sh ${product}"
                                                    if (!executeStage(cmd, 60, true, 'shell')) {
                                                        sh "cat /opt/pdbnn/regression.diffs"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    parallel job
                }
            }
        }
    }
}
